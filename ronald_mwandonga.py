# -*- coding: utf-8 -*-
"""Ronald Mwandonga.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IFd51llbM-SKfrn4AUi6GE4jsccIoozL
"""

"""  DO NOT MODIFY  """
import sys
import pandas as pd
from sklearn.cluster import KMeans
from sklearn import metrics
"""  DO NOT MODIFY  """

from google.colab import files
uploaded = files.upload()

def find_best_kmeans(data, min_k, max_k):

    """  write from here  """
# Initialize the K-Means Model
X = pd.read_csv("housing.csv")
data = list(zip(X.MedInc, X.HouseAge, X.AveRooms))

K = input('Enter:')
for k in range(13, 17):
  kmeans = KMeans(n_clusters=k, n_init = "auto",random_state = 0)
  kmeans.fit(X)
  c = kmeans.labels_

# Use the data and calculate Silhouette Coefficient for the range of K provided
metrics.silhouette_score(data, c, metrics = 'euclidean')

# Return the best K with respect to Silhouette Coefficient
print("The Best K value is:")

"""      End        """

"""'''  DO NOT MODIFY  '''"""

if __name__ == '__main__':

    """
    ALERT: * * * No changes are allowed in this section  * * *
    """

    if len(sys.argv) == 2:
        print("Usage: python assignment.py <number> <number>")
        sys.exit(1)

    input_data_one = sys.argv[1].strip()
    input_data_two = sys.argv[2].strip()

    """  Call to function that will perform the computation. """
    if input_data_one.isdigit() and input_data_two.isdigit():

        min_k = int(input_data_one)
        max_k = int(input_data_two)
        if min_k>=2 or max_k>min_k:
            data =pd.read_csv("./housing.csv")
            print(find_best_kmeans(data, min_k, max_k))
        else:
           print("Invalid input")
    else:
        print("Invalid input")


    """ End to call """